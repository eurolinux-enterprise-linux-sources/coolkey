diff -up ./src/coolkey/slot.cpp.broken_gemalto ./src/coolkey/slot.cpp
diff -up ./src/libckyapplet/cky_applet.c.broken_gemalto ./src/libckyapplet/cky_applet.c
--- ./src/libckyapplet/cky_applet.c.broken_gemalto	2012-11-26 17:23:32.325252000 -0800
+++ ./src/libckyapplet/cky_applet.c	2012-11-26 18:10:53.711896000 -0800
@@ -1109,11 +1109,27 @@ CKYStatus
 PIVApplet_Select(CKYCardConnection *conn, CKYISOStatus *apduRC)
 {
     CKYStatus ret;
-    CKYBuffer PIV_Applet_AID;
+    CKYBuffer PIV_Applet_AID,return_AID;
+    
+    CKYBuffer_InitEmpty(&return_AID);
     CKYBuffer_InitFromData(&PIV_Applet_AID, pivAid, sizeof(pivAid));
     ret = CKYApplet_HandleAPDU(conn, CKYAppletFactory_SelectFile, 
 		 &PIV_Applet_AID,
-		 NULL, CKY_SIZE_UNKNOWN, CKYAppletFill_Null, NULL, apduRC);
+		 NULL, CKY_SIZE_UNKNOWN, CKYAppletFill_AppendBuffer, 
+		 &return_AID, apduRC);
+    /* Some cards return OK, but don't switch to our applet */
+    /* PIV has a well defined return for it's select, check to see if we have
+     * a PIV card here */
+    if (CKYBuffer_GetChar(&return_AID,0) != 0x61) {
+	/* not an application property template, so not a PIV. We could
+	 * check that the aid tag (0x4f) and theallocation authority tag (0x79)
+	 * are present, but what we are really avoiding is broken cards that
+	 * lie about being able to switch to a particular applet, so the first
+	 * tag should be sufficient */
+	ret = CKYAPDUFAIL; /* what we should have gotten */
+    }
+    CKYBuffer_FreeData(&PIV_Applet_AID);
+    CKYBuffer_FreeData(&return_AID);
     return ret;
 }
 
